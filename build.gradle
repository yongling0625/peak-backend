buildscript {
    ext {
        springBootVersion = '2.2.5.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'
apply plugin: 'docker'

group = 'cn.gy-peak'
version = '1.0'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
mainClassName = "cn.gypeak.peakbackend.PeakBackendApplication"

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.3.1'
    implementation 'com.baomidou:mybatis-plus-generator:3.3.1'
    implementation 'org.freemarker:freemarker:2.3.29'
    implementation 'com.alibaba:druid-spring-boot-starter:1.1.21'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.mxixm:fastboot-weixin:0.6.2'
    implementation 'org.apache.httpcomponents:httpclient:4.5.12'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

jar {
    baseName = "peak-backend"
    version = 1.0
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

test {
    useJUnitPlatform()
}
